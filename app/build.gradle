plugins {
    id 'com.android.application'
    id 'kotlin-android'
}
apply plugin: 'android-aspectjx'
apply from: '../common.gradle'

// Android 代码规范文档：https://github.com/getActivity/AndroidCodeStandard
android {

    // 资源目录存放指引：https://developer.android.google.cn/guide/topics/resources/providing-resources
    defaultConfig {

        // 无痛修改包名：https://www.jianshu.com/p/17327e191d2e
        applicationId 'cn.bndg.smartchat'

        // 仅保留中文语种的资源
//        resConfigs 'zh', "zh-rCN"

        // 仅保留 xxhdpi 图片资源（目前主流分辨率 1920 * 1080）
        resConfigs 'xxhdpi'

        // 混淆配置
        proguardFiles 'proguard-sdk.pro', 'proguard-app.pro'

        // 日志打印开关
        buildConfigField('boolean', 'LOG_ENABLE', '' + LOG_ENABLE + '')
        // 测试包下的 BuglyId
        buildConfigField('String', 'BUGLY_ID', '"' + BUGLY_ID + '"')
        // 测试服务器的主机地址
        buildConfigField('String', 'HOST_URL', '"' + HOST_URL + '"')
        javaCompileOptions {
            annotationProcessorOptions {
                arguments += [
                        "room.schemaLocation"  : "$projectDir/schemas".toString(),
                        "room.incremental"     : "true",
                        "room.expandProjection": "true"]
                /*
                Room 具有以下注释处理器选项：
                room.schemaLocation：配置并启用将数据库架构导出到给定目录中的 JSON 文件的功能。
                                    [创建好表和数据库后编译，会在 app/schemas 目录下生成这个 JSON 文件]
                room.incremental：启用 Gradle 增量注释处理器。
                room.expandProjection：配置 Room 以重写查询，使其顶部星形投影在展开后仅包含 DAO 方法返回类型中定义的列。
                */
            }
        }
        dexOptions {
            javaMaxHeapSize '4g'
        }
    }

    // Apk 签名的那些事：https://www.jianshu.com/p/a1f8e5896aa2
    signingConfigs {
        config {
            storeFile file(StoreFile)
            storePassword StorePassword
            keyAlias KeyAlias
            keyPassword KeyPassword
        }
    }
    kotlinOptions {
        jvmTarget = "1.8"
        freeCompilerArgs += "-Xjvm-default=all-compatibility"
    }
    // 构建配置：https://developer.android.google.cn/studio/build/build-variants
    buildTypes {

        debug {
            // 给包名添加后缀
            applicationIdSuffix '.debug'
            // 调试模式开关
            debuggable true
            jniDebuggable true
            // 压缩对齐开关
            zipAlignEnabled false
            // 移除无用的资源
            shrinkResources false
            // 代码混淆开关
            minifyEnabled false
            // 签名信息配置
            signingConfig signingConfigs.config
            // 添加清单占位符
            addManifestPlaceholders([
                    'app_name': 'kptk debug'
            ])
            // 调试模式下只保留一种架构的 so 库，提升打包速度
            ndk {
                abiFilters 'arm64-v8a'
            }
        }

        preview.initWith(debug)
        preview {
            applicationIdSuffix ''
            // 添加清单占位符
            addManifestPlaceholders([
                    'app_name': 'kptk Preview'
            ])
            // 调试模式下只保留一种架构的 so 库，提升打包速度
            ndk {
                abiFilters 'arm64-v8a'
            }
        }

        release {
            // 调试模式开关
            debuggable false
            jniDebuggable false
            // 压缩对齐开关
            zipAlignEnabled false
            // 移除无用的资源
            shrinkResources false
            // 代码混淆开关
            minifyEnabled false
            // 签名信息配置
            signingConfig signingConfigs.config
            // 添加清单占位符
            addManifestPlaceholders([
                    'app_name': '@string/app_name'
            ])
            // 仅保留两种架构的 so 库，根据 Bugly 统计得出
            ndk {
                // armeabi：万金油架构平台（占用率：0%）
                // armeabi-v7a：曾经主流的架构平台（占用率：10%）
                // arm64-v8a：目前主流架构平台（占用率：95%）
//                , 'arm64-v8a'
                abiFilters 'arm64-v8a'
            }
        }
    }

    packagingOptions {
        // 剔除这个包下的所有文件（不会移除签名信息）
        exclude 'META-INF/*******'
    }
    ndkVersion '23.1.7779620'


  /*  aspectjx {
        // 排除一些第三方库的包名（Gson、 LeakCanary 和 AOP 有冲突）
        // exclude 'androidx', 'com.google', 'com.squareup', 'org.apache', 'com.alipay', 'com.taobao', 'versions.9'
        // 只对以下包名做 AOP 处理
        include android.defaultConfig.applicationId
    }*/
    applicationVariants.all { variant ->
        // apk 输出文件名配置
        variant.outputs.all { output ->
            outputFileName = rootProject.getName() + '_v' + variant.versionName + '_' + variant.buildType.name
            if (variant.buildType.name == buildTypes.release.getName()) {
                outputFileName += '_' + new Date().format('MMdd')
            }
            outputFileName += '.apk'
        }
    }
}
// AOP 配置（exclude 和 include 二选一）
// 需要进行配置，否则就会引发冲突，具体表现为：
// 第一种：编译不过去，报错：java.util.zip.ZipException：Cause: zip file is empty
// 第二种：编译能过去，但运行时报错：ClassNotFoundException: Didn't find class on path: DexPathList
aspectjx {
    // 排除一些第三方库的包名（Gson、 LeakCanary 和 AOP 有冲突）
    // 否则就会起冲突：ClassNotFoundException: Didn't find class on path: DexPathList
  /*  exclude 'androidx', 'com.google', 'com.squareup', 'com.alipay', 'com.taobao','com.facebook',
            'org.apache',
            'org.jetbrains',
            'kotlinx',
            "module-info", 'versions.9'*/
    // 只对以下文件包名做 AOP 处理
    include 'com.hjq.demo'
}
// 添加构建依赖项：https://developer.android.google.cn/studio/build/dependencies
// api 与 implementation 的区别：https://www.jianshu.com/p/8962d6ba936e
dependencies {
     implementation fileTree(include: ['*.aar'], dir: 'libs')
    // 基类封装
    implementation project(':library:base')
    // 控件封装
    implementation project(':library:widget')
    // 友盟封装
    implementation project(':library:umeng')

    // 权限请求框架：https://github.com/getActivity/XXPermissions
    implementation 'com.github.getActivity:XXPermissions:20.0'

    // 标题栏框架：https://github.com/getActivity/TitleBar
    implementation 'com.github.getActivity:TitleBar:9.2'

    // 吐司框架：https://github.com/getActivity/ToastUtils
    implementation 'com.github.getActivity:ToastUtils:9.5'

    // 网络请求框架：https://github.com/getActivity/EasyHttp
    implementation 'com.github.getActivity:EasyHttp:12.8'
    // OkHttp 框架：https://github.com/square/okhttp
    // noinspection GradleDependency
    implementation 'com.squareup.okhttp3:okhttp:3.12.13'

    // Json 解析框架：https://github.com/google/gson
    implementation 'com.google.code.gson:gson:2.10.1'
    // Gson 解析容错：https://github.com/getActivity/GsonFactory
    implementation 'com.github.getActivity:GsonFactory:9.6'

    // Shape 框架：https://github.com/getActivity/ShapeView
    implementation 'com.github.getActivity:ShapeView:6.0'

    // AOP 插件库：https://mvnrepository.com/artifact/org.aspectj/aspectjrt
    implementation 'org.aspectj:aspectjrt:1.9.6'

    // 图片加载框架：https://github.com/bumptech/glide
    // 官方使用文档：https://github.com/Muyangmin/glide-docs-cn
    implementation 'com.github.bumptech.glide:glide:4.14.2'
    implementation project(':library:image')
    annotationProcessor 'com.github.bumptech.glide:compiler:4.12.0'

    // 沉浸式框架：https://github.com/gyf-dev/ImmersionBar
    implementation 'com.gyf.immersionbar:immersionbar:3.0.0'

    // 手势 ImageView：https://github.com/Baseflow/PhotoView
//    implementation 'com.github.Baseflow:PhotoView:2.3.0'
    implementation 'com.github.chrisbanes.photoview:library:1.2.4'
    // Bugly 异常捕捉：https://bugly.qq.com/docs/user-guide/instruction-manual-android/?v=20190418140644
    implementation 'com.tencent.bugly:crashreport:4.1.9.3'
    // 动画解析库：https://github.com/airbnb/lottie-android
    // 动画资源：https://lottiefiles.com、https://icons8.com/animated-icons
    implementation 'com.airbnb.android:lottie:4.1.0'

    // 上拉刷新下拉加载框架：https://github.com/scwang90/SmartRefreshLayout
    implementation 'io.github.scwang90:refresh-layout-kernel:2.0.5'
    implementation 'io.github.scwang90:refresh-header-classics:2.0.5'
    //经典刷新头
    implementation 'io.github.scwang90:refresh-header-material:2.0.5'

    //谷歌刷新头
    implementation 'io.github.scwang90:refresh-footer-classics:2.0.5'

    // 日志打印框架：https://github.com/JakeWharton/timber
    implementation 'com.jakewharton.timber:timber:4.7.1'

    // 指示器框架：https://github.com/ongakuer/CircleIndicator
    implementation 'me.relex:circleindicator:2.1.6'

    // 腾讯 MMKV：https://github.com/Tencent/MMKV
    implementation 'com.tencent:mmkv-static:1.2.10'

    // 内存泄漏监测框架：https://github.com/square/leakcanary
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.7'
//    previewImplementation 'com.squareup.leakcanary:leakcanary-android:2.7'

    // 语种切换框架：https://github.com/getActivity/MultiLanguages
    implementation 'com.github.getActivity:MultiLanguages:9.3'
    // 悬浮窗：https://github.com/getActivity/XToast
    // 日志输出：https://github.com/getActivity/Logcat
    // 轮播图：https://github.com/bingoogolapple/BGABanner-Android
    // 二维码：https://github.com/bingoogolapple/BGAQRCode-Android
    // 跑马灯：https://github.com/sunfusheng/MarqueeView
    // 对象注解：https://www.jianshu.com/p/f1f888e4a35f
    // 对象存储：https://github.com/leavesC/DoKV
    // 多渠道打包：https://github.com/Meituan-Dianping/walle
    // 设备唯一标识：http://msa-alliance.cn/col.jsp?id=120
    // 嵌套滚动容器：https://github.com/donkingliang/ConsecutiveScroller
    // 隐私调用监控：https://github.com/huage2580/PermissionMonitor
// 工具类：https://github.com/Blankj/AndroidUtilCode
    implementation 'com.blankj:utilcodex:1.31.0'
    implementation 'org.greenrobot:eventbus:3.1.1'
    //华为统一扫码服务
    implementation 'com.huawei.hms:scan:2.11.0.300'
    implementation "io.github.cymchad:BaseRecyclerViewAdapterHelper:3.0.14"
    //room
    implementation "androidx.room:room-runtime:2.5.2"
    annotationProcessor "androidx.room:room-compiler:2.5.2"
    // RxJava3 support for Room
    implementation "androidx.room:room-rxjava3:2.5.2"
    /**
     * --------------------------------------------------------------------------------------------
     */
    //数据库
    implementation 'com.github.open-android:pinyin4j:2.5.0'

    // app数字显示图标
    implementation "me.leolin:ShortcutBadger:1.1.22@aar"

    // 朋友圈 查看缩略视图到原视图 https://github.com/iielse/imageviewer
    implementation 'com.github.iielse:ImageWatcher:1.1.0'

    // 黄油刀
    implementation 'com.jakewharton:butterknife:10.2.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:10.2.1'

    // 核心必须依赖
    implementation 'com.zhy:flowlayout-lib:1.0.3'
    // 相机拍照，相册选择(单选/多选)
    // https://github.com/HuanTanSheng/EasyPhotos
    // 朋友圈图片加载
    implementation project(':imagewatcher')
    // smack封装
    implementation project(':library:smartsmack')

    // 图片压缩
    implementation 'com.zxy.android:tiny:1.1.0'
    // 聊天面板from大神团队
    implementation 'com.github.DSAppTeam:PanelSwitchHelper:v1.5.10'
    // 群聊图片九宫格图标
    implementation project(':library:GroupAvatarsLib')
    // imageview drawable
    implementation 'com.amulyakhare:com.amulyakhare.textdrawable:1.0.1'
    //消息列表自由复制文字
    implementation 'com.github.ITxiaoguang:SelectTextHelper:1.1.0'
    // rxjava rxandroid相关
    implementation "io.reactivex.rxjava3:rxjava:3.1.2"
    implementation 'io.reactivex.rxjava3:rxandroid:3.0.0'
    //rxjava3
    implementation 'com.github.liujingxing.rxlife:rxlife-rxjava3:2.2.2'
// Kotlin 标准库和 Android 标准库
//    api "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
// AndroidX 核心库的 Kotlin 扩展
//    api 'androidx.core:core-ktx:1.8.0'
// Kotlin 协程支持
//    api 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.7.1'
//    implementation files('libs\\BaiduLBS_Android.jar')
//    implementation 'com.baidu.lbsyun:BaiduMapSDK_Location_All:9.1.8'
//    implementation 'com.baidu.lbsyun:BaiduMapSDK_Map-AllNavi:7.4.0'
//    implementation"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
//    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.5'
//    implementation 'androidx.core:core-ktx:1.3.2'

    implementation "androidx.activity:activity-ktx:1.2.0"//新添加
    def lifecycle_version = "2.2.0"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation project(':library:flowcamera')
}
